version: '3.8'

services:
  # PHP Service (Laravel backend)
  app:
    build:
      context: .
      dockerfile: Dockerfile
    image: digitalocean.com/php
    container_name: Workspace
    restart: unless-stopped
    tty: true
    environment:
      SERVICE_NAME: app
      SERVICE_TAGS: dev
    working_dir: /home/lorrainecamargo/projeto/Docker-projects-laravel
    volumes:
      - ./:/home/lorrainecamargo/projeto/Docker-projects-laravel
      - ./php/local.ini:/usr/local/etc/php/conf.d/local.ini
    networks:
      - app-network

  # Nginx Service (Laravel frontend)
  webserver:
    image: nginx:alpine
    container_name: Nginx
    restart: unless-stopped
    tty: true
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./:/home/lorrainecamargo/projeto/Docker-projects-laravel
      - ./nginx/conf.d/:/etc/nginx/conf.d/
    networks:
      - app-network
    depends_on:
      - app

  # MySQL Database
  db:
    image: mysql:latest
    container_name: Mysql
    restart: unless-stopped
    tty: true
    ports:
      - "3308:3308"
    environment:
      MYSQL_DATABASE: laravel
      MYSQL_ROOT_PASSWORD: root
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    volumes:
      - dbdata:/var/lib/mysql/
      - ./mysql/my.cnf:/etc/mysql/my.cnf
    networks:
      - app-network

  # PhpMyAdmin (acesso ao banco via navegador)
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: Phpmyadmin
    restart: unless-stopped
    ports:
      - "8080:80"
    environment:
      PMA_HOST: db
      MYSQL_ROOT_PASSWORD: root
    networks:
      - app-network
    depends_on:
      - db

  # GLPI (sistema de gestão de ativos e helpdesk)
  glpi:
    image: diouxx/glpi
    container_name: glpi
    restart: unless-stopped
    ports:
      - "8081:80"
    environment:
      TIMEZONE: America/Sao_Paulo
      DB_HOST: db
      DB_NAME: glpi
      DB_USER: root
      DB_PASSWORD: root
    depends_on:
      - db
    networks:
      - app-network

  # GLPI Agent (inventário automático) - usando Dockerfile.glpi-agent
  glpi-agent:
    build:
      context: .
      dockerfile: Dockerfile.glpi-agent
    container_name: glpi-agent
    restart: unless-stopped
    command: >
      --server http://glpi/front/inventory.php
    networks:
      - app-network
    depends_on:
      - glpi


# Docker Networks
networks:
  app-network:
    driver: bridge

# Volumes
volumes:
  dbdata:
    driver: local
